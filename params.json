{"name":"SNXJ.GitHub.io","tagline":"SNXJ的博客——Android屏幕适配","body":"*android  \r\n1、使用相对布局，禁用绝对布局  \r\n2、使用wrap_content、match_parent、weight(线性布局的特有属性)  \r\n3、能够使用权重的地方尽量使用权重（android:layout_weight）  \r\n4、如果是纯色背景，尽量使用android的shape 自定义。  \r\n5、如果需要在特定分辨率下适配，可以在res目录上新建layout-HxW.xml的文件夹。比如要适配1080*1800的屏幕（魅族MX3采用此分辨率）则新建layout-1800x1080.xml的文件夹，然后在下面定义布局。Android系统会优先查找分辨率相同的布局，如果不存在则换使用默认的layout下的布局。  \r\n\r\n   ldpi:  240左右（0.75）120  \r\n   mdpi： 360左右（1倍） 160  \r\n   hdpi：480左右(1.5倍)  240  \r\n   xhdpi：720左右(2倍)   320  \r\n   xxhdpi：1080左右(3倍)  480  \r\n   xxxhdpi：1440左右(4倍) 720  \r\n6、ImageView的ScaleType属性  \r\n设置不同的ScaleType会得到不同的显示效果，一般情况下，设置为centerCrop能获得较好的适配效果。  \r\n7、代码适配  \r\nDisplayMetrics metric = new DisplayMetrics();   \r\ngetWindowManager().getDefaultDisplay().getMetrics(metric);   \r\nint width = metric.widthPixels; // 屏幕宽度（像素）   \r\nint height = metric.heightPixels; // 屏幕高度（像素）   \r\nfloat density = metric.density; // 屏幕密度（0.75 / 1.0 / 1.5）   \r\nint densityDpi = metric.densityDpi; // 屏幕密度DPI（120 / 160 / 240）   \r\n\r\nDisplayMetrics metrics = new DisplayMetrics();  \r\nDisplay display = activity.getWindowManager().getDefaultDisplay();  \r\ndisplay.getMetrics(metrics);  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}